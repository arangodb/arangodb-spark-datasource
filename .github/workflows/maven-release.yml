name: Release

on:
  workflow_dispatch:
  push:
    tags: [ release** ]

jobs:
  release:
    timeout-minutes: 20
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - scala-version: 2.11
            spark-version: 2.4
          - scala-version: 2.12
            spark-version: 2.4
          - scala-version: 2.12
            spark-version: 3.1
          - scala-version: 2.12
            spark-version: 3.2
          - scala-version: 2.13
            spark-version: 3.2

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'adopt'
          cache: 'maven'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_CENTRAL_TOKEN
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
      - name: Publish to Apache Maven Central
        run: mvn --no-transfer-progress -Ddeploy -Dmaven.test.skip=true -Pscala-${{matrix.scala-version}} -Pspark-${{matrix.spark-version}} deploy
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.OSSRH_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
      - name: Release to Apache Maven Central
        run: mvn --no-transfer-progress -Ddeploy -Dmaven.test.skip=true -Pscala-${{matrix.scala-version}} -Pspark-${{matrix.spark-version}} nexus-staging:release
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_CENTRAL_TOKEN: ${{ secrets.OSSRH_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
