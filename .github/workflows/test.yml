name: Java CI

on:
  push:
    branches:
      - main
      - devel
    paths-ignore:
      - '.github/**'
      - 'bin/**'
      - 'demo/**'
      - 'docker/**'
      - 'lib/**'
      - 'python-integration-tests/**'
      - 'ChangeLog.md'
      - 'dev-README.md'
      - 'README.md'
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches:
      - main
      - devel

jobs:

  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        scala-version:
          - 2.11
          - 2.12
          - 2.13
        spark-version:
          - 2.4
          - 3.1
          - 3.2
        topology:
          - single
          - cluster
        java-version:
          - 8
          - 11
        docker-img:
          - docker.io/arangodb/arangodb:3.9.9
          - docker.io/arangodb/arangodb:3.10.4
        exclude:
          - scala-version: 2.11
            spark-version: 3.1
          - scala-version: 2.11
            spark-version: 3.2
          - scala-version: 2.11
            java-version: 11
          - scala-version: 2.13
            spark-version: 2.4
          - scala-version: 2.13
            spark-version: 3.1
          - docker-img: docker.io/arangodb/arangodb:3.9.9
            java-version: 8
          - docker-img: docker.io/arangodb/arangodb:3.10.4
            java-version: 11

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: ${{matrix.java-version}}
          distribution: 'adopt'
          cache: maven
      - name: Start Database
        run: ./docker/start_db.sh
        env:
          STARTER_MODE: ${{matrix.topology}}
          DOCKER_IMAGE: ${{matrix.docker-img}}
      - name: Info
        run: mvn -version
      - name: Test
        run: mvn -e --no-transfer-progress -Pscala-${{matrix.scala-version}} -Pspark-${{matrix.spark-version}} test

  integration-tests:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        scala-version:
          - 2.11
          - 2.12
          - 2.13
        spark-version:
          - 2.4
          - 3.1
          - 3.2
        topology:
          - cluster
        java-version:
          - 8
        docker-img:
          - docker.io/arangodb/arangodb:3.10.4
        exclude:
          - scala-version: 2.11
            spark-version: 3.1
          - scala-version: 2.11
            spark-version: 3.2
          - scala-version: 2.13
            spark-version: 2.4
          - scala-version: 2.13
            spark-version: 3.1

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: ${{matrix.java-version}}
          distribution: 'adopt'
          cache: maven
      - name: Start Database
        run: ./docker/start_db.sh
        env:
          STARTER_MODE: ${{matrix.topology}}
          DOCKER_IMAGE: ${{matrix.docker-img}}
      - name: Info
        run: mvn -version
      - name: Install
        run: mvn -e --no-transfer-progress -Pscala-${{matrix.scala-version}} -Pspark-${{matrix.spark-version}} -Dgpg.skip=true -DskipTests=true install
      - name: Test
        working-directory: integration-tests
        run: mvn -e --no-transfer-progress -Pscala-${{matrix.scala-version}} -Pspark-${{matrix.spark-version}} test

  test-python:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        scala-version: [2.12]
        spark-version: [3.1, 3.2]
        topology: [single, cluster]
        java-version: [8, 11]
        docker-img: ["docker.io/arangodb/arangodb:3.10.4"]

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: ${{matrix.java-version}}
          distribution: 'adopt'
          cache: maven
      - uses: actions/setup-python@v4
        with:
          python-version: ${{matrix.python-version}}
      - name: Start Database
        run: ./docker/start_db.sh
        env:
          STARTER_MODE: ${{matrix.topology}}
          DOCKER_IMAGE: ${{matrix.docker-img}}
      - name: Maven Info
        run: mvn -version
      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyspark~=${{matrix.spark-version}}.0
          pip install -r python-integration-tests/test-requirements.txt
      - name: Build Spark Datasource Artifact
        run: |
          mvn -e --no-transfer-progress -DskipTests -Pscala-${{matrix.scala-version}} -Pspark-${{matrix.spark-version}} package
          find . -name "arangodb-spark-datasource-${{matrix.spark-version}}_*-jar-with-dependencies.jar" -exec cp {} ./arangodb-spark-datasource-under-test.jar \;
      - name: Run tests for PySpark ${{matrix.spark-version}} on Python ${{matrix.python-version}}
        run: |
          pytest python-integration-tests/integration --adb-datasource-jar ./arangodb-spark-datasource-under-test.jar --adb-hostname 172.28.0.1


  testSsl:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        scala-version:
          - 2.11
          - 2.12
          - 2.13
        spark-version:
          - 2.4
          - 3.1
          - 3.2
        topology:
          - single
        java-version:
          - 8
          - 11
        docker-img:
          - docker.io/arangodb/arangodb:3.10.4
        exclude:
          - scala-version: 2.11
            spark-version: 3.1
          - scala-version: 2.11
            spark-version: 3.2
          - scala-version: 2.13
            spark-version: 2.4
          - scala-version: 2.13
            spark-version: 3.1
          - scala-version: 2.11
            java-version: 11
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: ${{matrix.java-version}}
          distribution: 'adopt'
          cache: maven
      - name: Start Database
        run: ./docker/start_db.sh
        env:
          SSL: true
          STARTER_MODE: ${{matrix.topology}}
          DOCKER_IMAGE: ${{matrix.docker-img}}
      - name: Info
        run: mvn -version
      - name: Test
        run: mvn -e --no-transfer-progress -am -pl integration-tests -Pscala-${{matrix.scala-version}} -Pspark-${{matrix.spark-version}} -Dtest=org.apache.spark.sql.arangodb.datasource.SslTest -DSslTest=true -DfailIfNoTests=false test

  test-older-spark-versions:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - spark-version: 2.4
            scala-version: 2.11
            spark-full-version: 2.4.8
          - spark-version: 2.4
            scala-version: 2.12
            spark-full-version: 2.4.8
          - spark-version: 3.1
            scala-version: 2.12
            spark-full-version: 3.1.0
          - spark-version: 3.1
            scala-version: 2.12
            spark-full-version: 3.1.1
          - spark-version: 3.1
            scala-version: 2.12
            spark-full-version: 3.1.2
          - spark-version: 3.1
            scala-version: 2.12
            spark-full-version: 3.1.3
          - spark-version: 3.2
            scala-version: 2.12
            spark-full-version: 3.2.0
          - spark-version: 3.2
            scala-version: 2.13
            spark-full-version: 3.2.0
          - spark-version: 3.2
            scala-version: 2.12
            spark-full-version: 3.2.1
          - spark-version: 3.2
            scala-version: 2.13
            spark-full-version: 3.2.1
          - spark-version: 3.2
            scala-version: 2.12
            spark-full-version: 3.2.2
          - spark-version: 3.2
            scala-version: 2.13
            spark-full-version: 3.2.2
          - spark-version: 3.2
            scala-version: 2.12
            spark-full-version: 3.2.3
          - spark-version: 3.2
            scala-version: 2.13
            spark-full-version: 3.2.3
          - spark-version: 3.2
            scala-version: 2.12
            spark-full-version: 3.2.4
          - spark-version: 3.2
            scala-version: 2.13
            spark-full-version: 3.2.4
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          cache: maven
      - name: Start Database
        run: ./docker/start_db.sh
        env:
          STARTER_MODE: cluster
          DOCKER_IMAGE: docker.io/arangodb/arangodb:3.10.4
      - name: Info
        run: mvn -version
      - name: Install
        run: mvn -e --no-transfer-progress -Pscala-${{matrix.scala-version}} -Pspark-${{matrix.spark-version}} -Dgpg.skip=true -DskipTests=true install
      - name: Deployment Test
        run: mvn -f ./demo/pom.xml -Pscala-${{matrix.scala-version}} -Pspark-${{matrix.spark-version}} -Dspark.version=${{matrix.spark-full-version}} -DimportPath=docker/import test

  sonar:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        scala-version:
          - 2.12
        spark-version:
          - 3.2
        topology:
          - single
        java-version:
          - 11
        docker-img:
          - docker.io/arangodb/arangodb:3.10.4

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v2
        with:
          java-version: ${{matrix.java-version}}
          distribution: 'adopt'
          cache: maven
      - name: Start Database
        run: ./docker/start_db.sh
        env:
          STARTER_MODE: ${{matrix.topology}}
          DOCKER_IMAGE: ${{matrix.docker-img}}
      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Info
        run: mvn -version
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -e --no-transfer-progress -Pscala-${{matrix.scala-version}} -Pspark-${{matrix.spark-version}} -Dgpg.skip=true -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=arangodb_arangodb-spark-datasource
